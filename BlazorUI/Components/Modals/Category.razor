@inject IHttpClientFactory _clientFactory
@inject ISnackbar _snackBar
@inject ComponentBus _bus

<MudDialog>
    <DialogContent>
        <article>
            <EditForm EditContext="editContext" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <MudTextField Label="Category" @bind-Value="categoryModel.Name" For="(() => categoryModel.Name)" onchange="@CategoryExists()" />
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="submit-btn">Submit</MudButton>
            </EditForm>
        </article>
    </DialogContent>
</MudDialog>

@code {
    private CategoryModel categoryModel = new();
    private EditContext? editContext;
    private ValidationMessageStore? modelState;

    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; } = new ();

    protected override void OnInitialized()
    {
        editContext = new(categoryModel);
        modelState = new(editContext);
    }

    private async Task HandleValidSubmit()
    {
        MudDialog.Close(DialogResult.Ok(true));

        HttpClient httpClient = _clientFactory.CreateClient("ServerAPI");
        HttpResponseMessage response = await httpClient.PostAsJsonAsync("Item/AddCategory", categoryModel);

        if (response.IsSuccessStatusCode)
        {
            CategoryAddedEvent categoryAddedEvent = new() { ReloadTable = true };
            await _bus.Publish(categoryAddedEvent);

            _snackBar.Add("Category has been added successfully", Severity.Success);
        }
        else
        {
            _snackBar.Add("An unexpected error occured", Severity.Error);
        }
    }

    private async Task<bool> CategoryExists()
    {
        bool categoryExists = false;

        FieldIdentifier categoryControlIdentifier = editContext!.Field(nameof(categoryModel.Name));
        modelState!.Clear(categoryControlIdentifier);

        if (!String.IsNullOrWhiteSpace(categoryModel.Name))
        {
            HttpClient httpClient = _clientFactory.CreateClient("ServerAPI");
            categoryExists = await httpClient.GetFromJsonAsync<bool>($"Item/CategoryExists?category={categoryModel.Name}");

            if (categoryExists)
            {
                modelState.Add(categoryControlIdentifier, "Category already exists");
                editContext.NotifyValidationStateChanged();
            }
        }

        return categoryExists;
    }
}
