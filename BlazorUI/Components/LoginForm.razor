@inject HttpClient httpClient
@inject ISnackbar snackBar

<article>
    <MudCard class="container">
        <EditForm Model="loginModel" OnValidSubmit="HandleValidSubmit">
            <MudCardHeader>
                <h2>Login</h2>
            </MudCardHeader>
            <MudCardContent>
                <DataAnnotationsValidator />
                <MudTextField Label="Email" @bind-Value="loginModel.Email" For="(() => loginModel.Email)" />
                <MudTextField Label="Password" @bind-Value="loginModel.Password" For="(() => loginModel.Password)" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Login</MudButton>
                <MudLink Href="/register" Underline="Underline.Always">Create a new user</MudLink>
            </MudCardActions>
        </EditForm>
    </MudCard>
</article>

@code {
    private LoginModel loginModel = new();

    private async Task HandleValidSubmit()
    {
        HttpResponseMessage response = await httpClient.PostAsJsonAsync("Identity/Login", loginModel);

        if (response.IsSuccessStatusCode)
        {

        }
        else
        {
            snackBar.Add("Email or Password is incorrect", Severity.Error);
        }
    }
}
