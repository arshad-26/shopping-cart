@page "/home"
@implements IDisposable
@attribute [Authorize(Roles = "User")]
@inject AuthInterceptor _authInterceptor
@inject IHttpClientFactory _clientFactory

<article>
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" Class="tab-content">
        @foreach (CategoryModel category in cartList)
        {
            <MudTabPanel Text="@category.Name">
                <MudGrid Spacing="0">
                    @if(category.Items!.Count() != 0)
                    {
                        @foreach (ItemModel item in category.Items!)
                        {
                            <MudItem xs="3">
                                <CartItem Item="item" />
                            </MudItem>
                        }
                    }
                    else
                    {
                        <MudItem xs="12">
                            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                                <MudText Typo="Typo.h6">No Items found</MudText>
                            </MudPaper>
                        </MudItem>
                    }
                </MudGrid>
            </MudTabPanel>
        }
    </MudTabs>
</article>

@code{
    private List<CategoryModel> cartList = new();

    protected override async Task OnInitializedAsync()
    {
        _authInterceptor.RegisterEvent();

        HttpClient httpClient = _clientFactory.CreateClient("ServerAPI");
        ServiceResponse<IEnumerable<CategoryModel>> response = (await httpClient.GetFromJsonAsync<ServiceResponse<IEnumerable<CategoryModel>>>("Cart/GetItems"))!;
        cartList = (response.ResponseData as List<CategoryModel>)!;
        StateHasChanged();
    }

    public void Dispose()
    {
        _authInterceptor.DisposeEvent();
    }
}
